/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN EtudiantActionsGenerated.js PLEASE EDIT ../EtudiantActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import EtudiantApi from "../../../api/EtudiantApi";

let actionsFunction = {

  //CRUD METHODS

  // Create etudiant
  createEtudiant: function(etudiant) {
    return function(dispatch) {
      return EtudiantApi
        .createEtudiant(etudiant)
        .then(etudiant => {
          dispatch(actionsFunction.createEtudiantSuccess(etudiant));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createEtudiantSuccess: function(etudiant) {
    return { type: types.CREATE_ETUDIANT_SUCCESS, payload: etudiant };
  },


  // Delete etudiant
  deleteEtudiant: function(id) {
    return function(dispatch) {
      return EtudiantApi
        .deleteEtudiant(id)
        .then(etudiant => {
          dispatch(actionsFunction.deleteEtudiantSuccess(etudiant));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteEtudiantSuccess: function(etudiant) {
    return { type: types.DELETE_ETUDIANT_SUCCESS, payload: etudiant };
  },


  // Get etudiant
  loadEtudiant: function(id) {
    return function(dispatch) {
      return EtudiantApi
        .getOneEtudiant(id)
        .then(etudiant => {
          dispatch(actionsFunction.loadEtudiantSuccess(etudiant));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadEtudiantSuccess: function(etudiant) {
    return { type: types.GET_ETUDIANT_SUCCESS, payload: etudiant };
  },

  // Load  list
  loadEtudiantList: function() {
    return function(dispatch) {
      return EtudiantApi
        .getEtudiantList()
        .then(list => {
          dispatch(actionsFunction.loadEtudiantListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadEtudiantListSuccess: function(list) {
    return { type: types.LIST_ETUDIANT_SUCCESS, payload: list };
  },

	
  // Save etudiant
  saveEtudiant: function(etudiant) {
    return function(dispatch) {
      return EtudiantApi
        .saveEtudiant(etudiant)
        .then(etudiant => {
          dispatch(actionsFunction.saveEtudiantSuccess(etudiant));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveEtudiantSuccess: function(etudiant) {
    return { type: types.UPDATE_ETUDIANT_SUCCESS, payload: etudiant };
  },


};

export default actionsFunction;
