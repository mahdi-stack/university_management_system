/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN ProfesseurActionsGenerated.js PLEASE EDIT ../ProfesseurActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import ProfesseurApi from "../../../api/ProfesseurApi";

let actionsFunction = {

  //CRUD METHODS

  // Create professeur
  createProfesseur: function(professeur) {
    return function(dispatch) {
      return ProfesseurApi
        .createProfesseur(professeur)
        .then(professeur => {
          dispatch(actionsFunction.createProfesseurSuccess(professeur));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createProfesseurSuccess: function(professeur) {
    return { type: types.CREATE_PROFESSEUR_SUCCESS, payload: professeur };
  },


  // Delete professeur
  deleteProfesseur: function(id) {
    return function(dispatch) {
      return ProfesseurApi
        .deleteProfesseur(id)
        .then(professeur => {
          dispatch(actionsFunction.deleteProfesseurSuccess(professeur));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteProfesseurSuccess: function(professeur) {
    return { type: types.DELETE_PROFESSEUR_SUCCESS, payload: professeur };
  },


  // Get professeur
  loadProfesseur: function(id) {
    return function(dispatch) {
      return ProfesseurApi
        .getOneProfesseur(id)
        .then(professeur => {
          dispatch(actionsFunction.loadProfesseurSuccess(professeur));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadProfesseurSuccess: function(professeur) {
    return { type: types.GET_PROFESSEUR_SUCCESS, payload: professeur };
  },

  // Load  list
  loadProfesseurList: function() {
    return function(dispatch) {
      return ProfesseurApi
        .getProfesseurList()
        .then(list => {
          dispatch(actionsFunction.loadProfesseurListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadProfesseurListSuccess: function(list) {
    return { type: types.LIST_PROFESSEUR_SUCCESS, payload: list };
  },

	
  // Save professeur
  saveProfesseur: function(professeur) {
    return function(dispatch) {
      return ProfesseurApi
        .saveProfesseur(professeur)
        .then(professeur => {
          dispatch(actionsFunction.saveProfesseurSuccess(professeur));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveProfesseurSuccess: function(professeur) {
    return { type: types.UPDATE_PROFESSEUR_SUCCESS, payload: professeur };
  },


};

export default actionsFunction;
